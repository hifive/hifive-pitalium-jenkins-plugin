<?xml version="1.0"?>
<project name="pitalium" default="it_test_screenshot">

	<!-- プロジェクト名 -->
	<basename property="current.project.name" file="${basedir}" suffix="${ant.file}" />

	<!-- プロジェクトの設定 -->
	<property name="target.project.version" value="1.1.0" />
	<property name="target.java.encoding" value="UTF-8" />
	<property name="target.java.version" value="1.8" />
	<property name="target.java.source.version" value="1.8" />

	<!-- ソースフォルダの設定 -->
	<property name="target.main.src.dir" value="src/main/java" />
	<property name="target.main.res.dir" value="src/main/resources" />
	<property name="target.test.src.dir" value="src/test/java" />
	<property name="target.test.res.dir" value="src/test/resources" />

	<!-- 出力先の設定 -->
	<property name="target.lib.dir" value="libs" />
	<property name="target.work.dir" value="target/work" />
	<property name="target.main.bin.dir" value="${target.work.dir}/classes" />
	<property name="target.test.bin.dir" value="${target.work.dir}/test-classes" />
	<property name="target.junit.report.dir" value="${target.work.dir}/test-reports" />
	<property name="target.cobertura.dir" value="${target.work.dir}/test-cobertura" />
	<property name="target.cobertura.instrument.dir" value="${target.cobertura.dir}/instrument" />
	<property name="target.cobertura.datafile" value="${target.cobertura.dir}/cobertura.ser" />
	<property name="target.javadoc.dir" value="${basedir}/target/doc" />

	<!-- jarファイルの設定 -->
	<property name="target.jar.name" value="${current.project.name}-${target.project.version}.jar" />
	<property name="target.srcjar.name" value="${current.project.name}-${target.project.version}-sources.jar" />

	<!-- 各ゴールで実行する/除外するテストの設定 -->
	<property name="it.screenshot.includes" value="**/it/screenshot/fullPage/*.java,**/it/screenshot/scroll/*.java" />
	<property name="it.screenshot.excludes" value="**/it/screenshot/*.java,**/package-info.java,**/it/screenshot/fullPage/EntirePageTest.java,**/it/screenshot/scroll/SingleScrollElementTest.java" />
	<property name="it.assertion.includes" value="**/it/assertion/fullPage/*.java,**/it/assertion/scroll/*.java" />
	<property name="it.assertion.excludes" value="**/it/assertion/*.java,**/package-info.java" />

	<!-- テスト実行用設定ファイル名 -->
	<property name="set_expected.config.file" value="environmentConfig.json" />
	<property name="run_test.config.file" value="environmentConfig_test.json" />

	<!-- プロキシ設定 -->
	<propertyset id="proxy.settings">
		<propertyref name="ant.proxy.host" />
		<propertyref name="ant.proxy.port" />
	</propertyset>

	<!-- ライブラリのパス  -->
	<path id="target.lib.path">
		<fileset id="lib" dir="${target.lib.dir}" includes="*.jar" />
	</path>

	<!-- コンパイル時のパス -->
	<path id="required.classpath">
		<pathelement location="${target.main.bin.dir}" />
		<path refid="target.lib.path" />
	</path>

	<!-- 作業フォルダを絶対パスとして再定義 -->
	<property name="target.work.location" location="${target.work.dir}" />
	
	<!-- coberturaタスク定義 -->
	<path id="cobertura.classpath">
		<fileset dir="${target.lib.dir}">
			<include name="cobertura-*.jar" />
			<include name="slf4j-*.jar" />
			<include name="log4j-*.jar" />
			<include name="oro-*.jar" />
			<include name="asm-*.jar" />
			<include name="commons-lang3-*.jar" />
		</fileset>
	</path>
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<!-- テスト実行時のパス -->
	<path id="test.classpath">
		<pathelement location="${target.cobertura.instrument.dir}" />
		<pathelement location="${target.test.bin.dir}" />
		<path refid="required.classpath" />
		<path refid="target.lib.path" />
		<path refid="cobertura.classpath" />
	</path>

	<!-- ビルドファイルのインポート -->
	<import file="it_run_screenshot_set_expected.xml"/>
	<import file="it_run_screenshot.xml"/>
	<import file="it_run_assertion_set_expected.xml" />
	<import file="it_run_assertion.xml" />

	<!-- =================================
          target: clean
         ================================= -->
	<target name="clean" description="初期化します">
		<delete failonerror="false" verbose="true" includeemptydirs="true">
			<!-- workをクリア -->
			<fileset dir="${target.work.dir}" includes="**/*" />
		</delete>
	</target>

	<!-- =================================
        target: it_test_screenshot_set_expected
        ================================= -->
	<target name="it_test_screenshot_set_expected" description="結合テスト（screenshot)をSET_EXPECTEDモードで実行します。">
		<antcall target="it_screenshot_set_expected_all" />
	</target>

	<!-- =================================
	        target: it_test_assertion_set_expected
	        ================================= -->
	<target name="it_test_assertion_set_expected" description="結合テスト（assertion)をSET_EXPECTEDモードで実行します。">
		<antcall target="it_assertion_set_expected_all" />
	</target>

	<!-- =================================
        target: it_test_screenshot
        ================================= -->
	<target name="it_test_screenshot" description="結合テスト (screenshot) を行います。">
		<antcall target="it_screenshot_test_all" />
	</target>

	<!-- =================================
        target: it_test_assertion
        ================================= -->
	<target name="it_test_assertion" description="結合テスト (assertion) をRUN_TESTモードで実行します。">
		<antcall target="it_assertion_all" />
	</target>

</project>
